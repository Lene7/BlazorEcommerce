@page "/counter"
@inject ICartService CartService
@implements IDisposable

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

<a href="cart" class="btn btn-info">
    <i class="oi oi-cart"></i>
    <span class="badge">@cartItemsCount</span>
</a>

@code {
    private int currentCount = 0;
    private int cartItemsCount = 0;

    protected override async Task OnInitializedAsync()
    {
        CartService.OnChange += async () => await UpdateCartCount();
        await UpdateCartCount();
    }

    private void IncrementCount()
    {
        currentCount++;
    }

    private async Task UpdateCartCount()
    {
        try
        {
            var cartItems = await CartService.GetCartItems();
            cartItemsCount = cartItems.Count;
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Error fetching cart items count: {ex.Message}");
        }
        StateHasChanged(); // Refresh UI
    }

    public void Dispose()
    {
        CartService.OnChange -= async () => await UpdateCartCount();
    }
}
